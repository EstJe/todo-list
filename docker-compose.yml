version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    env_file: .env  # Подтягивает переменные из .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file: .env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Ваш gRPC-сервис
  app:
    build: ./service
    env_file: .env
    environment:
      ENV: ${ENV}
      TIMEOUT: ${TODO_TIMEOUT}
      DB_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
      REDIS_URL: "redis://:${REDIS_PASSWORD}@redis:6379/0"
      REDIS_TTL: ${REDIS_TTL}
      GRPC_PORT: ${TODO_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${TODO_PORT}:${TODO_PORT}"

  # Прокси (например, Nginx для gRPC-HTTP)
  proxy:
    image: nginx:alpine
    env_file: .env
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app

volumes:
  postgres_data: