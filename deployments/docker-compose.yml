version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    env_file: ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # App
  app:
    build: ../app
    env_file: ../.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${TODOAPP_GRPC_PORT}:${TODOAPP_GRPC_PORT}"


  # Прокси (например, Nginx для gRPC-HTTP)
    #proxy:
    #image: nginx:alpine
    #env_file: .env
      #volumes:
      # - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      #ports:
      #  - "80:80"
    #  - "443:443"
      # depends_on:
      #- app

volumes:
  postgres_data:
  redis_data: